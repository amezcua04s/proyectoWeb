@model clinicaApp.ViewModels.MedicoViewModel

@{
    ViewData["Title"] = "Registrar Médico";
    Layout = "_LayoutAdminLTE";
}

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <h1>@ViewData["Title"]</h1>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Nuevo médico</h3>
                </div>

                <form asp-action="Create" enctype="multipart/form-data" method="post">
                    <div class="card-body">

                        <div class="form-group">
                            <label asp-for="Nombre"></label>
                            <input asp-for="Nombre" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label asp-for="Paterno"></label>
                            <input asp-for="Paterno" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label asp-for="Materno"></label>
                            <input asp-for="Materno" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label asp-for="Correo"></label>
                            <input asp-for="Correo" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label asp-for="Contrasenia">Contraseña</label>
                            <input asp-for="Contrasenia" class="form-control"/>
                        </div>

                        <div class="form-group">
                            <label asp-for="Telefono"></label>
                            <input asp-for="Telefono" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label asp-for="Sexo"></label>
                            <select asp-for="Sexo" class="form-control">
                                <option value="">Seleccione una opción</option>
                                @foreach (var item in Html.GetEnumSelectList<clinicaApp.Models.Sexo>())
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="form-group">
                            <label asp-for="Nacimiento">Fecha de Nacimiento</label>
                            <input asp-for="Nacimiento" type="date" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label asp-for="EspecialidadesSeleccionadas">Especialidades</label>
                            <select asp-for="EspecialidadesSeleccionadas" asp-items="Model.EspecialidadesDisponibles" class="form-control" multiple size="5">
                            </select>
                            <small class="form-text text-muted">Puedes seleccionar múltiples opciones.</small>
                            <a asp-controller="Especialidad" asp-action="Create" class="btn btn-sm btn-link mt-1">Registrar nueva especialidad</a>
                        </div>



                        <div class="form-group">
                            <label asp-for="CedulaProfesional">Cédula Profesional</label>
                            <input asp-for="CedulaProfesional" class="form-control" />
                        </div>

                        <hr />
                        <h5>Disponibilidad Horaria</h5>

                        @foreach (var dia in Model.DisponibilidadesPorDia.Keys.ToList())
                        {
                            <div class="mb-3 border rounded p-3">
                                <strong>@dia</strong><br />
                                <div class="form-check form-switch mb-2">
                                    <input class="form-check-input toggle-dia" type="checkbox" id="toggle-@dia" checked />
                                    <label class="form-check-label">Disponible</label>
                                </div>

                                <div class="row row-cols-4 mb-2" id="horas-@dia">
                                    @foreach (var hora in Model.TodasLasHoras)
                                    {
                                        <div class="col form-check">
                                            <input class="form-check-input" type="checkbox"
                                                   name="DisponibilidadesPorDia[@dia]" value="@hora"
                                                   id="@($"{dia}_{hora}")" checked />
                                            <label class="form-check-label" for="@($"{dia}_{hora}")">@hora</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        }




                        <div class="form-group">
                            <label asp-for="Foto"></label>
                            <input asp-for="Foto" type="file" class="form-control-file" />
                        </div>

                    </div>

                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary">Registrar</button>
                        <a asp-controller="Admin" asp-action="Index" class="btn btn-secondary">Volver</a>
                    </div>
                </form>
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <ul>
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

            </div>
        </div>
    </section>
</div>
@section Scripts {

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Script 1: Mostrar u ocultar horas según checkbox
            document.querySelectorAll(".toggle-dia").forEach(toggle => {
                const dia = toggle.id.replace("toggle-", "");
                const contenedorHoras = document.getElementById(`horas-${dia}`);

                contenedorHoras.style.display = toggle.checked ? "flex" : "none";

                toggle.addEventListener("change", () => {
                    contenedorHoras.style.display = toggle.checked ? "flex" : "none";
                    contenedorHoras.querySelectorAll("input[type='checkbox']").forEach(chk => {
                        chk.disabled = !toggle.checked;
                        if (!toggle.checked) chk.checked = false;
                    });
                });
            });

            // Script 2: Clonar select de especialidad
            const btnAgregar = document.getElementById("agregar-especialidad");
            if (btnAgregar) {
                btnAgregar.addEventListener("click", function () {
                    const container = document.getElementById("especialidades-container");
                    const selectOriginal = container.querySelector("select");
                    const nuevoSelect = selectOriginal.cloneNode(true);
                    container.appendChild(nuevoSelect);
                });
            }
        });
    </script>



    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
